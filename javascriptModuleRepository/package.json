{
    "name": "@dependency/boilerplate",
    "description": "A Javascript module with multiple  to github releases.",
    "version": "1.0.0",
    "main": "./entrypoint/programmaticAPI",
    "bin": {
        "cli": "./entrypoint/cli"  
    },
    "files": [
        "./distribution"
    ],
    "workspaces": [
        "source",
        "./script/*"
    ],
    "private": true,
    "scripts": {
        "setup": "yarn install --production=false",
        "install": "yarn workspaces run install",
		"upgrade": "yarn workspaces run upgrade",
        "lint": "yarn run eslint --fix --config \"./configuration/eslint.config.js\" \"./\"",
        "test": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".test({ testPath: ['./test'] })\"",
        "test-break": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".test.default({ testPath: ['./test'], shouldDebugger: true, shouldCompileTest: true })\"",
        "testBreaKScriptManager": "export NODE_OPTIONS='--inspect-brk' && yarn run scriptManager @deployment/deploymentScript \".test({ testPath: ['./test'], shouldDebugger: false, shouldCompileTest: true })\"",
        "generateTypes": "tsc --project ./configuration/typescript.config.json",
        "sleep": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript '.sleep.setInterval()' ",
        "bumpVersion": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".packageVersion.bumpVersion({})\"",
        "deprecated_preinstall": "yarn install --ignore-scripts && (cd ./script && yarn install) # This is a workaround non publishable yarn workspaces. # install workspaces when used as a dependency # NOTES: --ignore-scripts doesn't work because nodegit depends on scripst to be installed correctly. # and using --modules-folder to the same node_modules causes issues. ",        
        "exportGraphData": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".graphDataLoading.exportAllGraphData({targetPath: './temporary/resource',fileName: 'graphData.json'})\"",
        "loadGraphData": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".graphDataLoading.loadGraphDataFromFile({ shouldClearDatabase: true, graphDataFilePath: './resource/graphData.json' })\"",
        "build": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".buildSourceCode.moduleProject({}, {compile:[/**'./test'*/]})\"",
        "buildAndRelease": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".buildAndRelease.moduleProject({})\"",
        "release": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".buildSourceCode.createGithubBranchedRelease({ tagName: '1.0.13' })\"",
        "updateGithubVersions": "yarn run scriptManager shouldCompileScript=true @deployment/deploymentScript \".versionGithub.checkVersion({ shouldUpdatePackage: true })\""
    },
    "flat": false,
    "dependencies": {},
    "devDependencies": {
        "@deployment/deploymentScript": "https://github.com/AppScriptIO/deploymentScript#semver:^2.x.x",
        "@deployment/javascriptTranspilation": "https://github.com/AppScriptIO/javascriptTranspilation#semver:^2.x.x",
        "@deployment/javascriptStaticAnalysis": "https://github.com/AppScriptIO/javascriptStaticAnalysis#semver:^1.x.x",
        "@deployment/scriptManager": "https://github.com/AppScriptIO/scriptManager#semver:^1.x.x",
        "typescript": "^3.3.3333"
    }
}